import Head from 'next/head';
import Link from 'next/link';
import React from 'react';
import { css } from '@emotion/react';
import styled from '@emotion/styled';
import EmailIcon from '../components/Icons/Email';
import GithubIcon from '../components/Icons/Github';
import LinkedinIcon from '../components/Icons/Linkedin';
import { PageLayout } from '../components/layout';

import profileImage from '../public/homepage/zachgawlik2.jpeg';
import vscodeDemo from '../public/homepage/convert-object-to-jsx-demo.gif';
import lightMeUpDemoPoster from '../public/homepage/light-me-up-demo-poster.png';
import webpackStatsDiffDemo from '../public/homepage/webpack-stats-diff-demo.png';

const starsByRepo = {};

const RPI_DEMO_RATIO = 404 / 720;

// height: 40px;
// color: black;
// transition: all 0.2s ease-out;

const AspectRatioBox = styled('div')`
  background: white;

  &::before {
    content: '';
    width: 1px;
    margin-left: -1px;
    float: left;
    height: 0;
    padding-top: ${(props) => props.ratio}px* 100%;
  }
  &::after {
    /* to clear float */
    content: '';
    display: table;
    clear: both;
  }
`;

const RepoLink = ({ repo, title, starsByRepo }) => (
  <Link href={`https://github.com/zachgawlik/${repo}`}>
    <a>
      {title}{' '}
      {starsByRepo[repo] ? (
        <span
          css={css`
            font-size: 14px;
            display: inline-block;
            transform: translateY(-2px);
          `}
        >
          ({starsByRepo[repo]}
          <span
            css={css`
              font-size: 12px;
            `}
            role="img"
            aria-label="GitHub Stars"
          >
            ★
          </span>
          )
        </span>
      ) : null}
    </a>
  </Link>
);

const socialIcons = [
  {
    href: 'https://github.com/ZachGawlik',
    IconComponent: GithubIcon,
    hoverColor: '#4078c0',
  },
  {
    IconComponent: EmailIcon,
    href: 'mailto:zachgawlik *at* gmail -dot- com',
    hoverColor: '#c71610',
  },
  {
    IconComponent: LinkedinIcon,
    href: 'https://www.linkedin.com/in/zachgawlik',
    hoverColor: '#0077b5',
  },
].map(({ IconComponent, href, hoverColor }) => (
  <a
    href={href}
    key={href}
    css={css`
      transition: color 0.2s ease-in-out;
      &:hover {
        color: ${hoverColor};
      }
    `}
  >
    <IconComponent className={`h-[40px] md:h-[30px]`} />
  </a>
));

export default function Home() {
  return (
    <PageLayout className="bg-slate-900">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <header className="md:max-w-prose m-auto py-8 flex justify-between items-baseline">
        <h1 className="text-2xl text-white">
          <Link className="no-underline" href="/">
            <a>Zach Gawlik</a>
          </Link>
        </h1>
      </header>

      <main className="pb-8">
        <div className="prose prose-invert m-auto">
          <div className="max-w-[200px] mx-auto md:float-right md:m-y-12 md:w-[20%] md:mx-12">
            <div>
              <img
                css={css`
                  border-radius: 50%;
                  margin-top: 2em;
                `}
                alt="Zach Gawlik"
                src={profileImage.src}
                height={profileImage.height}
                width={profileImage.width}
              />
            </div>
            <div className="flex space-x-8 pt-2 md:pt-0 md:space-x-4 justify-center">
              {socialIcons}
            </div>
          </div>
          <div>
            <div>
              <p>
                I’m a frontend engineer who enjoys building complex web
                applications that provide a great user experience. I also enjoy
                improving the developer experience by creating new tools or
                using existing ones to streamline development, creating the
                right abstractions or ripping out wrong ones, and improving
                validation and deployment infrastructure to ensure quick and
                confident delivery of new code.
              </p>
              <p>
                Recently I’ve been inspired by the various applications of
                parsing JavaScript into abstract syntax trees. This has led me
                to create a jscodeshift{' '}
                <a href="https://github.com/ZachGawlik/react-class-to-data-attr-codemod">
                  codemod
                </a>{' '}
                or{' '}
                <a href="https://gist.github.com/ZachGawlik/effabb207e37a1bc3c02593e0b751996">
                  two
                </a>
                , to{' '}
                <a href="https://github.com/prettier/prettier/pull/4315">
                  improve
                </a>{' '}
                async/await formatting in Prettier, and to build an internal
                component library documentation site at work with MDX.
              </p>
              <p>
                I am currently a Senior Software Engineer at{' '}
                <a href="https://www.squarespace.com/">Squarespace</a> in New
                York City. Outside of coding, I am learning how to sew my own
                clothes. I made the button-up in my photo!
              </p>
            </div>
          </div>
          <div
            css={css`
              display: flex;
              flex-wrap: wrap;
            `}
          >
            <div>
              <h2>Personal open-source projects</h2>
              <h3>
                <RepoLink
                  starsByRepo={starsByRepo}
                  repo="webpack-stats-diff-plugin"
                  title="Webpack Stats Diff Plugin"
                />
              </h3>
              <p>
                Webpack plugin to report bundle size changes relative to the
                prior build or earlier recorded builds. Provides clear feedback
                on the impact of webpack configuration changes, empowering
                developers to find the most optimized settings.
              </p>
              <img
                alt="Example output after running a production webpack build with webpack-stats-diff-plugin. The output reports the size of compiled files that have been added or removed, the size differences of files that have changed, and the total before & after size of the full build"
                src={webpackStatsDiffDemo.src}
                width={webpackStatsDiffDemo.width}
                height={webpackStatsDiffDemo.height}
              />
            </div>
            <div css={css``}>
              <h3>
                <RepoLink
                  starsByRepo={starsByRepo}
                  repo="vscode-convert-object-to-jsx"
                  title="VS Code Convert Object to JSX"
                />
              </h3>
              <p>
                VS Code extension to convert between JavaScript object and JSX
                prop formats upon pressing a keyboard shortcut. Saves developer
                time when switching formats, like when creating default props to
                use in a component test.
              </p>
              <img
                className="m-auto"
                css={css`
                  margin-bottom: 0;
                `}
                src={vscodeDemo.src}
                height={vscodeDemo.height}
                width={vscodeDemo.width}
                alt="Animated demonstration moving default props in and out of a test helper and using the extension to switch between JSX props syntax and Object entries syntax"
              />
            </div>
            <div>
              <h3>
                <RepoLink
                  starsByRepo={starsByRepo}
                  title="Light me up"
                  repo="light-me-up"
                />{' '}
              </h3>
              <p>
                Draw on-screen to make it appear on a connected Raspberry Pi
                with LED matrix. Responsive vanilla JavaScript frontend and
                Node.js backend using Socket.IO for syncing across active users
                and the Raspberry Pi.
              </p>
              <AspectRatioBox ratio={RPI_DEMO_RATIO}>
                <video
                  className="m-auto my-0"
                  css={css`
                    max-width: ${RPI_DEMO_RATIO * 500}px;
                    margin-bottom: 0; //
                  `}
                  poster={lightMeUpDemoPoster.src}
                  controls
                  crossOrigin="anonymous"
                  src="/homepage/light-me-up-demo.mp4"
                  type="video/mp4"
                />
              </AspectRatioBox>
            </div>
          </div>
        </div>
      </main>
    </PageLayout>
  );
}
